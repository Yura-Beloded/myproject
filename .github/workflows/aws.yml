#--------------------------------------------
#
#
#
#--------------------------------------------

name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk

env:
  AWS_REGION                : "eu_central_1"                   # set this to your preferred AWS region, e.g. us-west-1
  EB_PACKAGE_S3_BACKET_NAME : "S3"
  EB_APPLICATION_NAME       : "MyFlask"
  EB-ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKGE_NAME        : "flask_app_${{ gitnub.sha }}.zip"

on:
  push:
    branches:
      - main

jobs:
  my_ci_part:
    runs_on: ubuntu-latest

  steps:
    - name: Git clone our repo
      uses: actions/checkout@v1
      
    - name: Create ZIP deployment package
      run : zip -r ${{ env.DEPLOY_PACKGE_NAME }} ./ -x *.git*
      
     - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1



jobs:
  my_cd_part:
    runs_on: ubuntu-latest


###
permissions:
  contents: read


    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
