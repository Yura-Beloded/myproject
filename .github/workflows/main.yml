#--------------------------------------------
#
#
#
#--------------------------------------------

name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk

env:
  AWS_REGION                : "eu-central-1"
  EB_PACKAGE_S3_BACKET_NAME : "yura-flask-application-packages"
  EB_APPLICATION_NAME       : "MyFlask"
  EB_ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKAGE_NAME        : "flask_app_${{ github.sha }}.zip"

on:
  push:
    branches:
      - main

jobs:
  my_ci_part:
    runs-on : ubuntu-latest

    steps:
      - name: Git clone our repo
        uses: actions/checkout@v1
      
      - name: Create ZIP deployment package
        run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Copy Deployment package to S3 bucket
        run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BACKET_NAME }}/

      - name: Print Message for CI part finish
        run : echo "CI Pipeline part finished succesfully!"

  my_cd_part:
    runs-on : ubuntu-latest
    needs   : my_ci_part
    
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          
      - name: Create new ElasticBeanstalk Application
        run : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --sorce-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BACKET_NAME }}",S3KEy="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
      
      - name: Deploy new ElasticBeanstalk Application Version
        run : |
          aws elasticbeanstalk update-environment \
          --environment-name=${{ env.EB_ENVIRONMENT_NAME }} \
          --version-label "Ver-${{ github.sha }}"
      
      
      - name: Print Message for CD part finish
        run : echo "CD Pipeline part finished succesfully!"
